name: Docker Build and Test

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build Docker image
        run: |
          docker build -t online_test-web .

      - name: Run Docker container
        run: |
          docker run -d --name django_app1 online_test-web
          sleep 10  # Give the app time to initialize

      #  Apply Django migrations
      - name: Apply Django migrations
        run: |
          docker exec django_app1 python manage.py migrate

      - name: Run tests
        run: |
          docker exec django_app1 pytest accounts/tests.py || (
            echo "Tests failed. Container logs:"
            docker logs django_app1
            exit 1
          )

      - name: Stop and remove Docker container
        if: always()
        run: |
          docker stop django_app1
          docker rm django_app1

  deploy_koyeb:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install and configure the Koyeb CLI
        uses: koyeb-community/koyeb-actions@v2
        with:
          api_token: "${{ secrets.API_KEY }}"

      - name: Build and deploy the application to Koyeb
        uses: koyeb/action-git-deploy@v1
        with:
          service-env: "PORT=8001"
          service-ports: "8001:http"
          service-routes: "/:8001"

  auto_merge_to_main:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'pull_request'

    steps:
      - name: Auto-merge PR to main
        run: |
          gh pr merge "$PR_URL" --merge --delete-branch --admin
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR_URL: ${{ github.event.pull_request.html_url }}